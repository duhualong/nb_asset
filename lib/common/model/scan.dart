///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class CandidateItemsCarrierList {
/*
{
  "carrier_id": 0,
  "carrier_name": "未定义"
}
*/

  int carrierId;
  String carrierName;

  CandidateItemsCarrierList({
    this.carrierId,
    this.carrierName,
  });
  CandidateItemsCarrierList.fromJson(Map<String, dynamic> json) {
    carrierId = json["carrier_id"]?.toInt();
    carrierName = json["carrier_name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["carrier_id"] = carrierId;
    data["carrier_name"] = carrierName;
    return data;
  }
}

class CandidateItemsGroupList {
/*
{
  "group_id": 1700001,
  "group_name": "物联网单灯1"
}
*/

  int groupId;
  String groupName;

  CandidateItemsGroupList({
    this.groupId,
    this.groupName,
  });
  CandidateItemsGroupList.fromJson(Map<String, dynamic> json) {
    groupId = json["group_id"]?.toInt();
    groupName = json["group_name"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["group_id"] = groupId;
    data["group_name"] = groupName;
    return data;
  }
}

class CandidateItems {
/*
{
  "group_list": [
    {
      "group_id": 1700001,
      "group_name": "物联网单灯1"
    }
  ],
  "carrier_list": [
    {
      "carrier_id": 0,
      "carrier_name": "未定义"
    }
  ]
}
*/

  List<CandidateItemsGroupList> groupList;
  List<CandidateItemsCarrierList> carrierList;

  CandidateItems({
    this.groupList,
    this.carrierList,
  });
  CandidateItems.fromJson(Map<String, dynamic> json) {
    if (json["group_list"] != null) {
      var v = json["group_list"];
      var arr0 = List<CandidateItemsGroupList>();
      v.forEach((v) {
        arr0.add(CandidateItemsGroupList.fromJson(v));
      });
      groupList = arr0;
    }
    if (json["carrier_list"] != null) {
      var v = json["carrier_list"];
      var arr0 = List<CandidateItemsCarrierList>();
      v.forEach((v) {
        arr0.add(CandidateItemsCarrierList.fromJson(v));
      });
      carrierList = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (groupList != null) {
      var v = groupList;
      var arr0 = List();
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data["group_list"] = arr0;
    }
    if (carrierList != null) {
      var v = carrierList;
      var arr0 = List();
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data["carrier_list"] = arr0;
    }
    return data;
  }
}

class DeviceParamLampStatus {
/*
{
  "auto_light": 1,
  "lamp_vector": 1,
  "power_rate": 1
}
*/

  int autoLight;
  int lampVector;
  int powerRate;

  DeviceParamLampStatus({
    this.autoLight,
    this.lampVector,
    this.powerRate,
  });
  DeviceParamLampStatus.fromJson(Map<String, dynamic> json) {
    autoLight = json["auto_light"]?.toInt();
    lampVector = json["lamp_vector"]?.toInt();
    powerRate = json["power_rate"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["auto_light"] = autoLight;
    data["lamp_vector"] = lampVector;
    data["power_rate"] = powerRate;
    return data;
  }
}

class DeviceParam {


  String assetId;
  int phyId;
  String lightPoleCode;
  int groupId;
  String groupName;
  int carrierId;
  String carrierName;
  String barcodeId;
  String provider;
  String iccid;
  String imei;
  String imsi;
  int longitude;
  int latitude;
  int dateCreate;
  int ctrlState;
  int autoAlarm;
  int lampCount;
  List<DeviceParamLampStatus> lampStatus;
  int powerUpper;
  int powerLower;
  int reportReply;
  int reportCycle;
  int imageCount;
  int carrierRegistered;

  DeviceParam({
    this.assetId,
    this.phyId,
    this.lightPoleCode,
    this.groupId,
    this.groupName,
    this.carrierId,
    this.carrierName,
    this.barcodeId,
    this.provider,
    this.iccid,
    this.imei,
    this.imsi,
    this.longitude,
    this.latitude,
    this.dateCreate,
    this.ctrlState,
    this.autoAlarm,
    this.lampCount,
    this.lampStatus,
    this.powerUpper,
    this.powerLower,
    this.reportReply,
    this.reportCycle,
    this.imageCount,
    this.carrierRegistered,
  });
  DeviceParam.fromJson(Map<String, dynamic> json) {
    assetId = json["asset_id"]?.toString();
    phyId = json["phy_id"]?.toInt();
    lightPoleCode = json["light_pole_code"]?.toString();
    groupId = json["group_id"]?.toInt();
    groupName = json["group_name"]?.toString();
    carrierId = json["carrier_id"]?.toInt();
    carrierName = json["carrier_name"]?.toString();
    barcodeId = json["barcode_id"]?.toString();
    provider = json["provider"]?.toString();
    iccid = json["iccid"]?.toString();
    imei = json["imei"]?.toString();
    imsi = json["imsi"]?.toString();
    longitude = json["longitude"]?.toInt();
    latitude = json["latitude"]?.toInt();
    dateCreate = json["date_create"]?.toInt();
    ctrlState = json["ctrl_state"]?.toInt();
    autoAlarm = json["auto_alarm"]?.toInt();
    lampCount = json["lamp_count"]?.toInt();
    if (json["lamp_status"] != null) {
      var v = json["lamp_status"];
      var arr0 = List<DeviceParamLampStatus>();
      v.forEach((v) {
        arr0.add(DeviceParamLampStatus.fromJson(v));
      });
      lampStatus = arr0;
    }
    powerUpper = json["power_upper"]?.toInt();
    powerLower = json["power_lower"]?.toInt();
    reportReply = json["report_reply"]?.toInt();
    reportCycle = json["report_cycle"]?.toInt();
    imageCount = json["image_count"]?.toInt();
    carrierRegistered = json["carrier_registered"]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["asset_id"] = assetId;
    data["phy_id"] = phyId;
    data["light_pole_code"] = lightPoleCode;
    data["group_id"] = groupId;
    data["group_name"] = groupName;
    data["carrier_id"] = carrierId;
    data["carrier_name"] = carrierName;
    data["barcode_id"] = barcodeId;
    data["provider"] = provider;
    data["iccid"] = iccid;
    data["imei"] = imei;
    data["imsi"] = imsi;
    data["longitude"] = longitude;
    data["latitude"] = latitude;
    data["date_create"] = dateCreate;
    data["ctrl_state"] = ctrlState;
    data["auto_alarm"] = autoAlarm;
    data["lamp_count"] = lampCount;
    if (lampStatus != null) {
      var v = lampStatus;
      var arr0 = List();
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data["lamp_status"] = arr0;
    }
    data["power_upper"] = powerUpper;
    data["power_lower"] = powerLower;
    data["report_reply"] = reportReply;
    data["report_cycle"] = reportCycle;
    data["image_count"] = imageCount;
    data["carrier_registered"] = carrierRegistered;
    return data;
  }
}

class ScanResult {

  DeviceParam deviceParam;
  CandidateItems candidateItems;
  int status;
  String detail;

  ScanResult({
    this.deviceParam,
    this.candidateItems,
    this.status,
    this.detail,
  });
  ScanResult.fromJson(Map<String, dynamic> json) {
    deviceParam = json["device_param"] != null ? DeviceParam.fromJson(json["device_param"]) : null;
    candidateItems = json["candidate_items"] != null ? CandidateItems.fromJson(json["candidate_items"]) : null;
    status = json["status"]?.toInt();
    detail = json["detail"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (deviceParam != null) {
      data["device_param"] = deviceParam.toJson();
    }
    if (candidateItems != null) {
      data["candidate_items"] = candidateItems.toJson();
    }
    data["status"] = status;
    data["detail"] = detail;
    return data;
  }
}
